import React, { useEffect, useState } from "react";
import { Modal, Button } from "antd";
import { MessageOutlined } from "@ant-design/icons";
import CommunityService from "../../services/CommunityServices";
import "./QuestionList.css";

const QuestionList = () => {
  const [questions, setQuestions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedQuestion, setSelectedQuestion] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  useEffect(() => {
    fetchQuestions();
  }, []);

  const fetchQuestions = async () => {
    setLoading(true);
    try {
      const response = await CommunityService.getApprovedQuestions();
      setQuestions(response.data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y danh s√°ch c√¢u h·ªèi:", error);
    } finally {
      setLoading(false);
    }
  };

  // X·ª≠ l√Ω m·ªü popup
  const openModal = (question) => {
    setSelectedQuestion(question);
    setIsModalOpen(true);
  };

  // X·ª≠ l√Ω ƒë√≥ng popup
  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedQuestion(null);
  };

  return (
    <div className="question-list-container">
      <h3 className="question-list-title">C√°c c√¢u h·ªèi ƒë√£ ƒë∆∞·ª£c tr·∫£ l·ªùi</h3>
      {loading ? (
        <p className="loading-text">ƒêang t·∫£i d·ªØ li·ªáu...</p>
      ) : questions.length === 0 ? (
        <p className="no-question-text">Ch∆∞a c√≥ c√¢u h·ªèi n√†o.</p>
      ) : (
        questions.map((q) => (
          <div key={q._id} className="question-item">
            {/* Hi·ªÉn th·ªã ti√™u ƒë·ªÅ c√¢u h·ªèi */}
            <h4 className="question-title">{q.title}</h4>

            {/* Hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi h·ªèi */}
            <p className="question-meta">
              <strong>
                {q.gender}, {q.age} tu·ªïi
              </strong>
            </p>

            {/* N·ªôi dung c√¢u h·ªèi */}
            <p className="question-content">{q.content}</p>

            {/* Th·ªùi gian ƒëƒÉng c√¢u h·ªèi */}
            <p className="question-date">üìÖ {new Date(q.createdAt).toLocaleDateString()}</p>

            {/* N√∫t xem chi ti·∫øt */}
            <div className="question-footer">
              <span className="question-time">
                ‚è≥ {new Date(q.updatedAt).toLocaleDateString()}
              </span>
              <span className="question-reply" onClick={() => openModal(q)}>
                <MessageOutlined className="reply-icon" /> {q.answer ? "1 Tr·∫£ l·ªùi" : "Ch∆∞a c√≥ tr·∫£ l·ªùi"}
              </span>
              <span className="question-thanks">‚ù§Ô∏è 0 C·∫£m ∆°n</span>
            </div>
          </div>
        ))
      )}

      {/* Popup Modal hi·ªÉn th·ªã chi ti·∫øt c√¢u h·ªèi */}
      <Modal title="Chi ti·∫øt c√¢u h·ªèi" open={isModalOpen} onCancel={closeModal} footer={null}>
        {selectedQuestion && (
          <div className="modal-content">
            <h4 className="modal-question-title">{selectedQuestion.title}</h4>
            <p className="modal-question-meta">
              {selectedQuestion.gender}, {selectedQuestion.age} tu·ªïi
            </p>
            <p className="modal-question-content">{selectedQuestion.content}</p>
            <p className="modal-question-date">
              üìÖ Ng√†y h·ªèi: {new Date(selectedQuestion.createdAt).toLocaleDateString()}
            </p>

            {selectedQuestion.answer ? (
              <div className="modal-answer-section">
                <p>
                  <strong>B√°c sƒ©:</strong>{" "}
                  <span className="doctor-name">{selectedQuestion.doctorId?.name || "Ch∆∞a c·∫≠p nh·∫≠t"}</span>
                </p>
                <p>
                  <strong>Tr·∫£ l·ªùi:</strong> {selectedQuestion.answer}
                </p>
                <p className="modal-answer-time">
                  ‚è≥ Ng√†y tr·∫£ l·ªùi: {new Date(selectedQuestion.updatedAt).toLocaleDateString()}
                </p>
              </div>
            ) : (
              <p className="no-answer">Ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi.</p>
            )}
          </div>
        )}
      </Modal>
    </div>
  );
};

export default QuestionList;
